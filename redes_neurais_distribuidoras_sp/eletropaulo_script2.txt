function [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 26-Jun-2022 16:58:57.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 3x2 matrix, initial 2 delay states for input #1.
%   xi2 = 1x2 matrix, initial 2 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 3x2 matrix, final 2 delay states for input #1.
%   xf2 = 1x2 matrix, final 2 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [1.9;4.5;4.2];
x1_step1.gain = [0.0563380281690141;0.060790273556231;0.0591715976331361];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 2821.540039;
x2_step1.gain = 0.000240015647839362;
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.18422988292440828362;-3.0902980579985985798;5.6419777474418983942;15.180543478724848327;-8.3783744707830987153;-12.536425933444792946;0.66686559571685899428;-0.83780192069599834781;-25.94359350456054969;3.3183458418914426602];
IW1_1 = [-0.3755363361383990406 -0.31902240070520876403 -0.30909221384330715088 0.48425019395006674294 0.20679460826503762161 0.31304683557862561516;26.426505907841089993 24.253044659534467087 0.9037942161381905537 -11.902347228417038849 -12.242750419010446805 -15.384856064771392781;-16.342500968424545249 -8.4148584222129514387 -8.7555589171298660034 14.815621348464437901 12.26051773546729784 2.4849875960122402851;-9.1597290644916959934 0.84761365882055550447 -4.8848767307885445632 15.963882816641177698 13.758857143242870791 -1.1908177503372177064;1.8523812913582911044 -3.7814015974988621771 -3.6372940929380623842 -2.2345414248399277923 1.1381203564356987545 10.259881079625333911;-32.636684070225989274 -8.1480689400146335544 -47.520271582784474163 24.437466284543766903 20.639672140504117692 32.266162409279594669;-0.74164775341636735018 -0.88807750686341035973 -0.72451800642711927658 0.92782087847437477723 0.43731037718578424922 1.0626826609285422442;-6.8629639951939029885 -5.8453954303943493898 -5.484602378604453321 7.1319559284261977439 4.8899757388321329898 6.32107366355950262;-27.796693051931793406 -69.566558591008288204 -4.7018290896116132771 11.231848668487069531 61.25198470242433757 -3.0952970556352394915;0.93266590850894626197 0.50449292996355388219 0.77571524518396006709 -1.6433746803390214541 -0.35305749675897735163 -0.43751580575171455934];
IW1_2 = [-0.18592219635791551458 -0.51653233700052814115;3.9381296652789616886 -8.8069636817188481359;5.7927641239662310824 2.0819112514150672766;22.963036146683531769 -1.3848142270088648065;47.655548782633914584 -63.6671418281471162;-23.614935694726121085 14.377793546549872516;7.0656240539259105304 -5.8542469009096747001;8.8425628800863851353 -10.61590377914061456;55.159860264595522494 -78.952337194377193441;-0.51453507569607181971 0.090013947098446678297];

% Layer 2
b2 = 12.417566435189101526;
LW2_1 = [-0.94188860829097775795 0.0084671533045118738819 0.019821039256485057517 -4.8981923147209144743e-05 -0.0059737715699434050867 -0.0044338683878296595436 0.25253553033958514584 0.036992652569144628127 -0.0007985274929601442152 -12.805649412278963695];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.000240015647839362;
y1_step1.xoffset = 2821.540039;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(3,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+1,3)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2]-1,3)+1),6,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2]-1,3)+1),2,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 2);
xits = finalxts(finalxts<=2);
xts = finalxts(finalxts>2)-2;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
